{
  "name": "Moleculer Database benchmark - Common",
  "meta": {
    "type": "common",
    "adapter": "MongoDB"
  },
  "suites": [
    {
      "name": "Adapter: MongoDB - Entity creation (1000)",
      "meta": {
        "type": "create",
        "description": "This test calls the `users.create` service action to create an entity."
      },
      "tests": [
        {
          "name": "Call 'users.create'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.2633509,
            "cycle": 0,
            "count": 15000,
            "avg": 0.00035089006,
            "rps": 2849.895491482432,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity finding (1000)",
      "meta": {
        "type": "find",
        "description": "This test calls the `users.find` service action to get random 20 entities."
      },
      "tests": [
        {
          "name": "Call 'users.find'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.354772299,
            "cycle": 0,
            "count": 12000,
            "avg": 0.0004462310249166667,
            "rps": 2240.9916481866076,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity listing (1000)",
      "meta": {
        "type": "list",
        "description": "This test calls the `users.list` service action to random 20 entities."
      },
      "tests": [
        {
          "name": "Call 'users.list'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.935200399,
            "cycle": 0,
            "count": 5000,
            "avg": 0.0011870400798,
            "rps": 842.4315379211848,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity counting (1000)",
      "meta": {
        "type": "count",
        "description": "This test calls the `users.count` service action to get the number of entities."
      },
      "tests": [
        {
          "name": "Call 'users.count'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.2324066,
            "cycle": 0,
            "count": 9000,
            "avg": 0.0005813785111111111,
            "rps": 1720.0498141715516,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity getting (1000)",
      "meta": {
        "type": "get",
        "description": "This test calls the `users.get` service action to get a random entity."
      },
      "tests": [
        {
          "name": "Call 'users.get'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.210035,
            "cycle": 0,
            "count": 21000,
            "avg": 0.0002480969047619048,
            "rps": 4030.68309521913,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity resolving (1000)",
      "meta": {
        "type": "resolve",
        "description": "This test calls the `users.resolve` service action to resolve a random entity."
      },
      "tests": [
        {
          "name": "Call 'users.resolve'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.1709078,
            "cycle": 0,
            "count": 21000,
            "avg": 0.00024623370476190476,
            "rps": 4061.1824484667854,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity updating (1000)",
      "meta": {
        "type": "update",
        "description": "This test calls the `users.update` service action to update a entity."
      },
      "tests": [
        {
          "name": "Call 'users.update'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.0709139,
            "cycle": 0,
            "count": 9000,
            "avg": 0.0005634348777777778,
            "rps": 1774.8280048691026,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity replacing (1000)",
      "meta": {
        "type": "replace",
        "description": "This test calls the `users.replace` service action to replace a random entity."
      },
      "tests": [
        {
          "name": "Call 'users.replace'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 5.1397265,
            "cycle": 0,
            "count": 9000,
            "avg": 0.0005710807222222222,
            "rps": 1751.0659370688304,
            "percent": 0
          }
        }
      ]
    },
    {
      "name": "Adapter: MongoDB - Entity deleting (1000)",
      "meta": {
        "type": "remove",
        "description": "This test calls the `users.remove` service action to delete a random entity."
      },
      "tests": [
        {
          "name": "Call 'users.remove'",
          "fastest": true,
          "reference": true,
          "stat": {
            "duration": 7.4821335,
            "cycle": 0,
            "count": 60616,
            "avg": 0.00012343495941665567,
            "rps": 8101.43256599204,
            "percent": 0
          }
        }
      ]
    }
  ],
  "timestamp": 1618658402018,
  "generated": "Sat Apr 17 2021 13:20:02 GMT+0200 (GMT+02:00)",
  "elapsedMs": 53566
}